name: Create Release PR
run-name: Create Release PR from develop to main

on:
  workflow_dispatch:

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create release branch and prepare version
        run: |
          # 現在のバージョンを取得
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          # SNAPSHOTを削除したバージョンを取得
          RELEASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
          
          # リリースブランチを作成
          git checkout -b release/${RELEASE_VERSION}
          
          # pom.xmlのバージョンを更新（SNAPSHOTを削除）
          mvn versions:set -DremoveSnapshot=true -DgenerateBackupPoms=false
          
          # 変更をコミット
          git add pom.xml
          git commit -m "Prepare release ${RELEASE_VERSION}"
          git push origin release/${RELEASE_VERSION}
          
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: release/${{ env.RELEASE_VERSION }}
          title: "Release ${{ env.RELEASE_VERSION }}"
          body: |
            ## Release ${{ env.RELEASE_VERSION }}
            
            This PR contains the release version ${{ env.RELEASE_VERSION }}.
            
            ### Checklist
            - [ ] All tests pass
            - [ ] Documentation is updated
            - [ ] CHANGELOG is updated
            
            After merging this PR, the release workflow will automatically:
            1. Create a git tag
            2. Create a GitHub release  
            3. Publish to GitHub Packages
          labels: |
            release
            automated-pr
