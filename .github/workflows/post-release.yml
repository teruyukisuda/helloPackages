name: Post Release Update
run-name: Update develop branch after release

on:
  workflow_dispatch: 
  workflow_run:
    workflows: [ "Create Release" ]
    types: [ completed ]
    branches: [ main ]

jobs:
  update-develop:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Merge main to develop
        run: |
          # mainの最新を取得
          git fetch origin main
          
          # mainをdevelopにマージ
          git merge origin/main --no-ff -m "Merge main to develop after release"
          
      - name: Update to next development version
        run: |
          # 現在のバージョンを取得（例: 0.1.18）
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # バージョンを分解
          IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
          MAJOR="${version_parts[0]}"
          MINOR="${version_parts[1]}"
          PATCH="${version_parts[2]}"
          
          # パッチバージョンをインクリメント
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="${MAJOR}.${MINOR}.${NEXT_PATCH}-SNAPSHOT"
          
          # 次の開発バージョンを設定
          mvn versions:set -DnewVersion=$NEXT_VERSION -DgenerateBackupPoms=false
          
          # 変更をコミット
          git add pom.xml
          git commit -m "Prepare for next development iteration $NEXT_VERSION"
          
      - name: Push changes
        run: |
          git push origin develop
